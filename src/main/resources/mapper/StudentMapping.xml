<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<!-- 目的：为dao接口方法提供sql语句配置 -->
	<mapper namespace="com.dqs.dao.StudentDao">
		<!-- 设置学生 用户 班级 联表 -->
		<resultMap type="Student" id="studentList">
			<result property="id" column="id"/>
			<result property="user_id" column="user_id"/>
			<result property="name" column="name"/>
			<result property="tel" column="tel"/>
			<result property="reward" column="reward"/>
			<result property="point" column="point"/>
			<association property="user" javaType="User">
				<result property="gender" column="gender"/>
				<result property="account" column="account"/>
			</association>
			<association property="team" javaType="Team">
				<result property="id" column="tid"/>
				<result property="name" column="tname"/>
			</association>
		</resultMap>
		
		<!-- 增加一条学生信息 -->
		<insert id="insertOne" parameterType="Student">
			insert into b_student values(#{id},#{user_id},#{name},#{team_id},#{tel},#{reward},#{point})
		</insert>
		
		<!-- 根据编号删除一条信息 -->
		<delete id="deleteOne" parameterType="String">
			delete from b_student where id=#{id}
		</delete>
		
		<!-- 根据用户编号修改一个信息 -->
		<update id="updateOne" parameterType="Student">
			update b_student set team_id=#{team_id},name=#{name},tel=#{tel},reward=#{reward},point=#{point} where user_id=#{user_id}
		</update>
		<!-- 根据id修改一个人的电话信息 -->
		<update id="updateTel" parameterType="Student">
			update b_student set tel=#{tel} where user_id=#{user_id}
		</update>
		<!-- 根据用户名查询全部信息 -->
		<select id="selectOne" resultType="Student" parameterType="String">
			select * from b_student where user_id =#{user_id}
		</select>
		
		<!-- 查询全部信息 -->
		<select id="selectList" resultType="Student" >
			select * from b_student 
		</select>
		<!-- 查询登录老师所带班级的全部同学 -->
		<select id="selectOwnStuList" parameterType="String" resultMap="studentList">
			select s.*,u.gender
			from b_student s ,b_team t , s_user u
			where t.id = s.team_id
			and s.user_id = u.id
			and t.name=#{teamName}
		</select>
		<!-- 查询全部的同学 -->
		<select id="selectAllStuList" resultMap="studentList">
			select s.*,u.gender,t.name as tname,t.id as tid,u.account
			from b_student s ,b_team t , s_user u
			where t.id = s.team_id
			and s.user_id = u.id
		</select>
		<!-- 查询一个班级的所有学生 -->
		<select id="selectTeamStus" parameterType="String" resultType="Student">
			select id,name
			from b_student
			where team_id = #{teamId}
		</select>
	</mapper>