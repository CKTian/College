<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<!-- 目的：为dao接口方法提供sql语句配置 -->
	<mapper namespace="com.dqs.dao.CourseDao">
		<!-- 配置课程和老师多对一的关系 -->
		<resultMap type="Course" id="courseList">
			<result property="id" column="id"/>
			<result property="name" column="name"/>
			<result property="teacher_id" column="teacher_id"/>
			<result property="time" column="time"/>
			<association property="teacher" javaType="Teacher">
				<result property="id" column="tid"/>
				<result property="name" column="tname"/>
			</association>
		</resultMap>
		<!-- 增加一条课程信息 -->
		<insert id="insertOne" parameterType="Course">
			insert into b_course values(#{id},#{name},#{teacher_id},#{time})
		</insert>
		
		<!-- 根据编号删除一条信息 -->
		<delete id="deleteOne" parameterType="String">
			delete from b_course where id=#{courseId}
		</delete>
		
		<!-- 根据编号修改一条信息 -->
		<update id="updateOneCourse" parameterType="Course">
			update b_course set name=#{name},teacher_id =#{teacher_id} ,time=#{time} where id=#{id}
		</update>
		
		<!-- 修改该课程的老师为0000 -->
		<update id="updateTeacherId" parameterType="String">
			update b_course set teacher_id ='0000' where id=#{courseId}
		</update>
		
		<!-- 根据编号查询全部信息 -->
		<select id="selectOne" resultType="Course" parameterType="String">
			select * from b_course where id =#{id}
		</select>
		
		<!-- 查询全部课程 信息 -->
		<select id="selectList" resultMap="courseList">
			select c.id,c.teacher_id,c.name,c.time,t.name as tname 
			from b_course c,b_teacher t 
			where c.teacher_id = t.id
		</select>
		
		<!-- 查询登录老师所教的所有课名 -->
		<select id="showTeachCourse" resultType="Course" parameterType="String">
			select c.id,c.name,c.time
			from b_course c,b_teacher t 
			where c.teacher_id = t.id 
			and t.user_id = #{teacherId}
		</select>
		
		<!-- 查询登录老师所教的课的课表 -->
		<select id="showTimeTable" parameterType="String" resultType="showTimeTableDto">
			select c.id as courseId,c.name as courseName,c.time as courseTime
			from b_teacher t,b_course c
			where t.id = c.teacher_id
			and t.user_id =#{userId}
		</select>
		
		<!-- 查询该老师所教的所有课程id -->
		<select id="selectTeachCourse" parameterType="String" resultType="Course">
			select id,time,name
			from b_course
			where teacher_id = #{teacherId}
		</select>
	</mapper>