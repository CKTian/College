<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<!-- 目的：为dao接口方法提供sql语句配置 -->
	<mapper namespace="com.dqs.dao.ChoosedDao">
		<resultMap type="Choosed" id="choosedList">
			<result property="id" column="id"/>
			<result property="user_id" column="user_id"/>
			<result property="course_id" column="course_id"/>
			<result property="score" column="score"/>
			<association property="course" javaType="Course">
				<result property="id" column="cid"/>
				<result property="name" column="cname"/>
				<result property="time" column="time"/>
				<association property="teacher" javaType="Teacher">
					<result property="name" column="tname"/>
				</association>
			</association>
		</resultMap>
		
		<resultMap type="Choosed" id="OwnStuChoosed">
			<result property="id" column="id"/>
			<result property="user_id" column="user_id"/>
			<association property="student" javaType="Student">
				<result property="name" column="sname"/>
			</association>
			<association property="course" javaType="Course">
				<result property="name" column="cname"/>
			</association>
		</resultMap>
		
		<resultMap type="Choosed" id="toShowStuList">
			<result property="id" column="id"/>
			<result property="user_id" column="user_id"/>
			<result property="score" column="score"/>
			<association property="student" javaType="Student">
				<result property="name" column="sname"/>
			</association>
			<association property="team" javaType="Team">
				<result property="name" column="tname"/>
			</association>
		</resultMap>
		
		<!-- 增加一条选课信息 -->
		<insert id="insertOne" parameterType="Choosed">
			insert into b_choosed_course values(#{id},#{user_id},#{course_id},#{score})
		</insert>
		
		<!-- 根据编号删除一条信息 -->
		<delete id="deleteOne" parameterType="Choosed">
			delete from b_choosed_course where user_id=#{user_id} and course_id = #{course_id} 
		</delete>
		
		<!-- 根据编号修改一个选课信息 -->
		<update id="updateOne" parameterType="Choosed">
			update b_choosed_course set course_id=#{course_id},score =#{score} where id=#{id}
		</update>
		
		<!-- 查询登录者的所有选的课的id -->
		<select id="selectOwnCourse" resultType="Choosed" parameterType="String">
			select course_id from b_choosed_course where user_id =#{userId}
		</select>
		<!-- 多表联查 查询登陆者所选课 -->
		<select id="selectOwnChoosed" resultMap="choosedList" parameterType="String">
			select cc.id,cc.course_id, cc.score, c.name as cname, c.time, t.name as tname
			from b_choosed_course cc, b_course c, b_teacher t
			where 
			cc.course_id = c.id 
			and 
			c.teacher_id = t.id
			and
			cc.user_id = #{userId}
		</select>
		
		<!-- 查询全部信息 -->
		<select id="selectList" resultType="Choosed" parameterType="String">
			select * from b_choosed_course
		</select>
		
		<!-- 查询登录老师所带班级的学生的选课情况 -->
		<select id="showStuCourse" parameterType="String" resultMap="OwnStuChoosed">
			select cc.id ,s.name as sname,s.user_id,c.name as cname
			from b_student s ,b_course c,b_choosed_course cc,b_team t
			where s.user_id = cc.user_id
			and c.id = cc.course_id
			and s.team_id = t.id
			and t.name = #{teamName}
		</select>
		
		<!-- 查询所选课程中的所有学生 -->
		<select id="showChoosedCourseStu" parameterType="String" resultMap="toShowStuList">
			select cc.id,cc.user_id,s.name as sname,t.name as tname,cc.score 
			from b_choosed_course cc,b_student s,b_team t
			where cc.user_id = s.user_id
			and s.team_id = t.id
			and cc.course_id = #{courseId}
		</select>
	</mapper>